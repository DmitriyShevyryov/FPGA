`timescale 1ns / 1ps

module UART_Sender #(
    CLK_RATE = 100_000_000,
    BAUD_RATE = 9_600
)(
    input wire clk,
    input wire data_out_ready,
    input wire[7:0] data_out,
    output reg tx = 1,
    output reg wait_packet = 0
);

localparam WAIT = 0, START = 1, WRITE = 2, STOP = 3;

reg [$clog2(CLK_RATE / BAUD_RATE)-1:0] clk_baud_waiter = 0;
wire baud_flag = clk_baud_waiter == 0;
reg [1:0] state = 0;
reg [7:0] data = 0;
reg [3:0] bit_count = 0;

always @(posedge clk) begin 
    if (state != WAIT)
        clk_baud_waiter <= (clk_baud_waiter + 1) % (CLK_RATE / BAUD_RATE + 1);
     
    case (state)
        WAIT: begin 
            wait_packet = 0;
            if (data_out_ready) begin 
                data <= data_out;
                state <= START;          
            end
        end
        START: begin 
            if (baud_flag) begin 
                tx = 0;
                wait_packet = 1;
                state = WRITE;              
            end
        end
        WRITE: begin 
            if (baud_flag) begin
                if (bit_count == 8) begin 
                    tx <= 1;
                    state = STOP;
                end
                else tx <= data_out[bit_count];
                bit_count = (bit_count + 1) % 9;
            end
        end
        STOP: begin 
            if (baud_flag) state = WAIT;
        end
        
    endcase
end

endmodule
